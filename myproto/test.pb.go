// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

package myproto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type FOO int32

const (
	FOO_X FOO = 17
)

var FOO_name = map[int32]string{
	17: "X",
}
var FOO_value = map[string]int32{
	"X": 17,
}

func (x FOO) Enum() *FOO {
	p := new(FOO)
	*p = x
	return p
}
func (x FOO) String() string {
	return proto.EnumName(FOO_name, int32(x))
}
func (x *FOO) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FOO_value, data, "FOO")
	if err != nil {
		return err
	}
	*x = FOO(value)
	return nil
}

type RegReq struct {
	Label            *string               `protobuf:"bytes,1,req,name=label" json:"label,omitempty"`
	Type             *int32                `protobuf:"varint,2,opt,name=type,def=77" json:"type,omitempty"`
	Reps             []int64               `protobuf:"varint,3,rep,name=reps" json:"reps,omitempty"`
	Optionalgroup    *RegReq_OptionalGroup `protobuf:"group,4,opt,name=OptionalGroup" json:"optionalgroup,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *RegReq) Reset()         { *m = RegReq{} }
func (m *RegReq) String() string { return proto.CompactTextString(m) }
func (*RegReq) ProtoMessage()    {}

const Default_RegReq_Type int32 = 77

func (m *RegReq) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *RegReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RegReq_Type
}

func (m *RegReq) GetReps() []int64 {
	if m != nil {
		return m.Reps
	}
	return nil
}

func (m *RegReq) GetOptionalgroup() *RegReq_OptionalGroup {
	if m != nil {
		return m.Optionalgroup
	}
	return nil
}

type RegReq_OptionalGroup struct {
	RequiredField    *string `protobuf:"bytes,5,req" json:"RequiredField,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegReq_OptionalGroup) Reset()         { *m = RegReq_OptionalGroup{} }
func (m *RegReq_OptionalGroup) String() string { return proto.CompactTextString(m) }
func (*RegReq_OptionalGroup) ProtoMessage()    {}

func (m *RegReq_OptionalGroup) GetRequiredField() string {
	if m != nil && m.RequiredField != nil {
		return *m.RequiredField
	}
	return ""
}

func init() {
	proto.RegisterEnum("ns_test.FOO", FOO_name, FOO_value)
}
